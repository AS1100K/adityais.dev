name: Auto Update and Build Astro App

on:
  push:
    branches:
      - main
  schedule:
    - cron: '30 12 * * *' # Runs at 6:00 PM IST (12:30 PM UTC)
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  id-token: write
  pages: write

jobs:
  update-submodule:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive # Checkout submodules
        token: ${{ secrets.REPOSITORY_PAT }}

    - name: Git config
      run: |
        git config --global user.name "adityais.dev-submodule-updater[bot]"
        git config --global user.email "adityais.dev-submodule-updater[bot]@users.noreply.github.com"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

    - name: Git Submodule Update
      run: |
        git pull --recurse-submodules
        git submodule update --remote --recursive

    - name: Commit changes
      run: |
        git add .
        git commit -m "chore: Update submodule [no ci]"
      
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.REPOSITORY_PAT }}
        branch: main
      continue-on-error: true

  build:
    needs: update-submodule
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive # Checkout submodules
        token: ${{ secrets.REPOSITORY_PAT }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '23.4'

    - name: Install dependencies
      run: npm install

    - name: Set ENV variable
      run: echo "GITHUB_API_KEY=${{ secrets.ENV_GITHUB_API_KEY }}" >> $GITHUB_ENV
      
    - name: Build Astro app
      run: npm run build

    - name: Upload GitHub Pages Artifact
      id: deployment
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist

  deploy:
    needs: build

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
