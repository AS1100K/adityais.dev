---
import { Image } from "astro:assets";
import axios from "axios";

interface Props {
  title: string;
  is_archived?: boolean;
  description: string[];
  /** Number of stars of the repo.
   *
   * NOTE: If `stars` are not provided but `github_url` is provided then
   * it will automatically populate.
   */
  stars?: number;
  /** GitHub Repository URL
   *
   * format -> `{owner}/{repo}`
   */
  github_url?: string;
  external_url?: string;
  /** List of languages and tool used in this project */
  languages_n_tools?: string[];
}

const props = Astro.props;

if (!props.stars && props.github_url) {
  let github_api_key = import.meta.env.GITHUB_API_KEY;

  let res = await axios.get(
    `https://api.github.com/repos/${props.github_url}`,
    {
      headers: {
        Accept: "application/vnd.github+json",
        "X-GitHub-Api-Version": "2022-11-28",
        Authorization: `Bearer ${github_api_key}`,
      },
    },
  );

  if (res.status === 200) {
    props.stars = res.data.stargazers_count;
    props.github_url = res.data.html_url;
    props.is_archived = res.data.archived;
  }
}

export const prerender = true;

// Cache this page for 1 day
Astro.response.headers.set(
  "CDN-Cache-Control",
  "public, max-age=86400, must-revalidate",
);
---

<div class="featured-project">
  <div class="featured-headline">
    <div>
      <Image
        src="/assets/icons/repo.svg"
        width={24}
        height={24}
        alt="Repo Icon"
      />
      <h2>{props.title}</h2>
      {
        props.is_archived && (
          <div class="archived">
            <p>archived</p>
          </div>
        )
      }
    </div>
    {
      props.stars && (
        <div>
          <Image
            src="/assets/icons/star.svg"
            width={24}
            height={24}
            alt="Stars of repository"
          />
          <p>{props.stars}</p>
        </div>
      )
    }
  </div>
  <p>{props.description}</p>
  <div class="featured-footer">
    <div>
      {
        props.languages_n_tools?.map((language) => (
          <div class="language">
            <p>{language}</p>
          </div>
        ))
      }
    </div>
    <div>
      {
        props.external_url && (
          <a href={props.external_url}>
            <Image
              src="/assets/icons/link-external.svg"
              width={24}
              height={24}
              alt="Project External Link"
            />
          </a>
        )
      }
      {
        props.github_url && (
          <a href={props.github_url}>
            <Image
              src="/assets/icons/github.svg"
              width={24}
              height={24}
              alt="GitHub Repo Link"
            />
          </a>
        )
      }
    </div>
  </div>
</div>

<style>
  .featured-project {
    border-radius: 11px;
    border: 1px solid var(--text);
    padding: 15px;
    padding-bottom: 50px;
    margin: 0;
    position: relative;
  }

  .featured-project p {
    margin: 0;
  }

  .featured-headline {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
  }

  .featured-headline > div {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: 10px;
  }

  .featured-headline > div:last-child {
    gap: 5px;
  }

  .featured-headline > div > h2 {
    font-size: 20px;
    margin: 0;
    padding: 0;
  }

  .featured-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    /* margin-top: 10px; */
    position: absolute;
    bottom: 10px;
    width: calc(100% - 30px);
  }

  .featured-footer > div {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
  }

  .featured-footer a {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .language {
    border-radius: 50px;
    background-color: var(--secondary);
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .language p,
  .archived p {
    padding: 5px 10px;
    font-size: 14px;
  }

  .archived {
    border-radius: 50px;
    border: 1px solid rgb(154, 103, 0);
    color: rgb(154, 103, 0);
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .archived p {
    color: rgb(154, 103, 0);
  }
</style>
